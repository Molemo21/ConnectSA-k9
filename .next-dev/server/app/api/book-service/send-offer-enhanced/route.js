"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/book-service/send-offer-enhanced/route";
exports.ids = ["app/api/book-service/send-offer-enhanced/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:buffer");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute&page=%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute.ts&appDir=C%3A%5CUsers%5Cliqui%5COneDrive%5CDesktop%5CConnectSA%5CConnectSA-k9%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cliqui%5COneDrive%5CDesktop%5CConnectSA%5CConnectSA-k9&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute&page=%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute.ts&appDir=C%3A%5CUsers%5Cliqui%5COneDrive%5CDesktop%5CConnectSA%5CConnectSA-k9%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cliqui%5COneDrive%5CDesktop%5CConnectSA%5CConnectSA-k9&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_liqui_OneDrive_Desktop_ConnectSA_ConnectSA_k9_app_api_book_service_send_offer_enhanced_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/book-service/send-offer-enhanced/route.ts */ \"(rsc)/./app/api/book-service/send-offer-enhanced/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/book-service/send-offer-enhanced/route\",\n        pathname: \"/api/book-service/send-offer-enhanced\",\n        filename: \"route\",\n        bundlePath: \"app/api/book-service/send-offer-enhanced/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\liqui\\\\OneDrive\\\\Desktop\\\\ConnectSA\\\\ConnectSA-k9\\\\app\\\\api\\\\book-service\\\\send-offer-enhanced\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_liqui_OneDrive_Desktop_ConnectSA_ConnectSA_k9_app_api_book_service_send_offer_enhanced_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/book-service/send-offer-enhanced/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZib29rLXNlcnZpY2UlMkZzZW5kLW9mZmVyLWVuaGFuY2VkJTJGcm91dGUmcGFnZT0lMkZhcGklMkZib29rLXNlcnZpY2UlMkZzZW5kLW9mZmVyLWVuaGFuY2VkJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYm9vay1zZXJ2aWNlJTJGc2VuZC1vZmZlci1lbmhhbmNlZCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNsaXF1aSU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q0Nvbm5lY3RTQSU1Q0Nvbm5lY3RTQS1rOSU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDbGlxdWklNUNPbmVEcml2ZSU1Q0Rlc2t0b3AlNUNDb25uZWN0U0ElNUNDb25uZWN0U0EtazkmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ21FO0FBQ2hKO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8/OGIyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxsaXF1aVxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXENvbm5lY3RTQVxcXFxDb25uZWN0U0EtazlcXFxcYXBwXFxcXGFwaVxcXFxib29rLXNlcnZpY2VcXFxcc2VuZC1vZmZlci1lbmhhbmNlZFxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYm9vay1zZXJ2aWNlL3NlbmQtb2ZmZXItZW5oYW5jZWQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9ib29rLXNlcnZpY2Uvc2VuZC1vZmZlci1lbmhhbmNlZFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYm9vay1zZXJ2aWNlL3NlbmQtb2ZmZXItZW5oYW5jZWQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxsaXF1aVxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXENvbm5lY3RTQVxcXFxDb25uZWN0U0EtazlcXFxcYXBwXFxcXGFwaVxcXFxib29rLXNlcnZpY2VcXFxcc2VuZC1vZmZlci1lbmhhbmNlZFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYm9vay1zZXJ2aWNlL3NlbmQtb2ZmZXItZW5oYW5jZWQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute&page=%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute.ts&appDir=C%3A%5CUsers%5Cliqui%5COneDrive%5CDesktop%5CConnectSA%5CConnectSA-k9%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cliqui%5COneDrive%5CDesktop%5CConnectSA%5CConnectSA-k9&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/book-service/send-offer-enhanced/route.ts":
/*!***********************************************************!*\
  !*** ./app/api/book-service/send-offer-enhanced/route.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./lib/auth.ts\");\n/* harmony import */ var _lib_db_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db-utils */ \"(rsc)/./lib/db-utils.ts\");\n/* harmony import */ var _lib_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/notification-service */ \"(rsc)/./lib/notification-service.ts\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/types.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/ZodError.js\");\n\n\n\n\n\n// Force dynamic rendering to prevent build-time static generation\nconst dynamic = \"force-dynamic\";\nconst runtime = \"nodejs\";\n// Enhanced schema that supports both legacy and catalogue-based pricing\nconst sendOfferSchema = zod__WEBPACK_IMPORTED_MODULE_4__.object({\n    providerId: zod__WEBPACK_IMPORTED_MODULE_4__.string().min(1),\n    serviceId: zod__WEBPACK_IMPORTED_MODULE_4__.string().min(1, \"Service ID is required\").regex(/^([a-z0-9]{25}|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$/i, \"Invalid serviceId format. Expected CUID (25 chars) or UUID (36 chars) format.\"),\n    date: zod__WEBPACK_IMPORTED_MODULE_4__.string(),\n    time: zod__WEBPACK_IMPORTED_MODULE_4__.string(),\n    address: zod__WEBPACK_IMPORTED_MODULE_4__.string().min(1),\n    notes: zod__WEBPACK_IMPORTED_MODULE_4__.string().optional(),\n    // New optional fields for catalogue-based pricing\n    catalogueItemId: zod__WEBPACK_IMPORTED_MODULE_4__.string().cuid().optional(),\n    // Payment method field\n    paymentMethod: zod__WEBPACK_IMPORTED_MODULE_4__[\"enum\"]([\n        \"ONLINE\",\n        \"CASH\"\n    ]).default(\"ONLINE\"),\n    // Timezone context from client\n    timezone: zod__WEBPACK_IMPORTED_MODULE_4__.string().optional(),\n    timezoneOffsetMinutes: zod__WEBPACK_IMPORTED_MODULE_4__.number().optional()\n});\nasync function POST(request) {\n    // Skip during build time\n    if (process.env.NEXT_PHASE === \"phase-production-build\") {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Service temporarily unavailable during deployment\"\n        }, {\n            status: 503\n        });\n    }\n    try {\n        console.log(\"\\uD83D\\uDE80 Send-offer API called - Enhanced with Catalogue Pricing Support\");\n        console.log(\"\\uD83D\\uDD0D Request details:\", {\n            url: request.url,\n            method: request.method,\n            headers: Object.fromEntries(request.headers.entries())\n        });\n        const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_1__.getCurrentUser)();\n        if (!user || user.role !== \"CLIENT\") {\n            console.log(\"❌ Unauthorized access attempt\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        console.log(\"✅ User authenticated:\", {\n            userId: user.id,\n            role: user.role\n        });\n        const body = await request.json();\n        console.log(\"\\uD83D\\uDCE5 Request body received:\", JSON.stringify(body, null, 2));\n        // Validate request body structure\n        if (!body || typeof body !== \"object\") {\n            console.error(\"❌ Invalid request body:\", body);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid request body\"\n            }, {\n                status: 400\n            });\n        }\n        const validated = sendOfferSchema.parse(body);\n        console.log(\"✅ Request validated successfully:\", validated);\n        // Determine pricing mode based on feature flags and request data\n        const useCatalogue =  true && validated.catalogueItemId;\n        console.log(\"\\uD83D\\uDD0D Pricing mode:\", useCatalogue ? \"Catalogue-based\" : \"Legacy\");\n        // Parse date and time with client timezone offset when provided\n        let requestedDateTime;\n        try {\n            const [y, m, d] = validated.date.split(\"-\").map((n)=>parseInt(n, 10));\n            const [hh, mm] = validated.time.split(\":\").map((n)=>parseInt(n, 10));\n            const offset = typeof body.timezoneOffsetMinutes === \"number\" ? body.timezoneOffsetMinutes : undefined;\n            if (!isNaN(y) && !isNaN(m) && !isNaN(d) && !isNaN(hh) && !isNaN(mm) && typeof offset === \"number\") {\n                const utcMillis = Date.UTC(y, m - 1, d, hh, mm) - offset * 60000;\n                requestedDateTime = new Date(utcMillis);\n            } else {\n                // Fallback to naive parsing\n                requestedDateTime = new Date(`${validated.date}T${validated.time}`);\n            }\n        } catch  {\n            requestedDateTime = new Date(`${validated.date}T${validated.time}`);\n        }\n        console.log(\"\\uD83D\\uDCC5 Requested date/time (UTC):\", requestedDateTime.toISOString(), {\n            tz: body.timezone,\n            tzOffsetMin: body.timezoneOffsetMinutes\n        });\n        console.log(`🎯 Job offer request: Client ${user.id} requesting provider ${validated.providerId} for service ${validated.serviceId} on ${validated.date} at ${validated.time}`);\n        // Use the serviceId directly (it's already the correct Prisma ID format)\n        const actualServiceId = validated.serviceId;\n        console.log(\"\\uD83D\\uDD04 Using service ID directly:\", actualServiceId);\n        // Verify the provider is still available for this service\n        console.log(\"\\uD83D\\uDD0D Starting provider verification...\");\n        console.log(\"\\uD83D\\uDD0D Query parameters:\", {\n            providerId: validated.providerId,\n            serviceId: actualServiceId,\n            expectedStatus: \"APPROVED\",\n            expectedAvailable: true\n        });\n        const provider = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_2__.db.provider.findFirst({\n            where: {\n                id: validated.providerId,\n                services: {\n                    some: {\n                        serviceId: actualServiceId\n                    }\n                },\n                available: true,\n                status: \"APPROVED\"\n            },\n            include: {\n                services: {\n                    where: {\n                        serviceId: actualServiceId\n                    }\n                }\n            }\n        });\n        console.log(\"\\uD83D\\uDD0D Provider query completed, result:\", provider ? \"Found\" : \"Not found\");\n        if (!provider) {\n            console.log(`❌ Provider ${validated.providerId} not found or not available for service ${actualServiceId}`);\n            console.log(\"\\uD83D\\uDD0D Provider query details:\", {\n                providerId: validated.providerId,\n                serviceId: actualServiceId,\n                expectedStatus: \"APPROVED\",\n                expectedAvailable: true\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Provider is no longer available for this service\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"✅ Provider verified:\", {\n            providerId: provider.id,\n            businessName: provider.businessName,\n            available: provider.available,\n            status: provider.status,\n            serviceCount: provider.services.length,\n            services: provider.services.map((s)=>({\n                    serviceId: s.serviceId\n                }))\n        });\n        // Note: Conflict checking is disabled to allow multiple bookings per day\n        // Providers can manage their own schedule and availability\n        console.log(\"✅ Skipping booking conflict check - allowing multiple bookings per day\");\n        // Calculate pricing based on mode\n        let totalAmount = 0;\n        let platformFee = 0;\n        let duration = 2; // Default duration in hours\n        let bookedPrice = null;\n        let bookedCurrency = null;\n        let bookedDurationMins = null;\n        if (useCatalogue) {\n            // Catalogue-based pricing\n            console.log(\"\\uD83D\\uDCB0 Using catalogue-based pricing...\");\n            console.log(\"\\uD83D\\uDD0D Looking for catalogue item:\", {\n                catalogueItemId: validated.catalogueItemId,\n                providerId: validated.providerId\n            });\n            try {\n                console.log(\"\\uD83D\\uDD0D Querying catalogue item with:\", {\n                    catalogueItemId: validated.catalogueItemId,\n                    providerId: validated.providerId\n                });\n                const catalogueItem = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_2__.db.catalogueItem.findFirst({\n                    where: {\n                        id: validated.catalogueItemId,\n                        providerId: validated.providerId,\n                        isActive: true\n                    },\n                    include: {\n                        service: true\n                    }\n                });\n                console.log(\"\\uD83D\\uDD0D Catalogue item query result:\", catalogueItem ? \"Found\" : \"Not found\");\n                if (!catalogueItem) {\n                    console.log(\"❌ Catalogue item not found, checking if it exists at all...\");\n                    // Check if the catalogue item exists but doesn't match the provider\n                    const anyCatalogueItem = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_2__.db.catalogueItem.findFirst({\n                        where: {\n                            id: validated.catalogueItemId\n                        }\n                    });\n                    console.log(\"\\uD83D\\uDD0D Any catalogue item with this ID:\", anyCatalogueItem ? \"Found\" : \"Not found\");\n                    if (anyCatalogueItem) {\n                        console.log(\"\\uD83D\\uDD0D Found catalogue item but provider mismatch:\", {\n                            requestedProviderId: validated.providerId,\n                            actualProviderId: anyCatalogueItem.providerId,\n                            isActive: anyCatalogueItem.isActive,\n                            catalogueItemId: validated.catalogueItemId\n                        });\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: \"Package provider mismatch\",\n                            details: `The selected package belongs to a different provider. Package ID: ${validated.catalogueItemId}`\n                        }, {\n                            status: 400\n                        });\n                    } else {\n                        console.log(\"\\uD83D\\uDD0D Catalogue item does not exist at all:\", {\n                            catalogueItemId: validated.catalogueItemId,\n                            providerId: validated.providerId\n                        });\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: \"Package not found\",\n                            details: `The selected package does not exist. Package ID: ${validated.catalogueItemId}`\n                        }, {\n                            status: 400\n                        });\n                    }\n                }\n                totalAmount = catalogueItem.price;\n                duration = Math.ceil(catalogueItem.durationMins / 60); // Convert minutes to hours and round up\n                bookedPrice = catalogueItem.price;\n                bookedCurrency = catalogueItem.currency;\n                bookedDurationMins = catalogueItem.durationMins;\n                // Ensure duration is a valid integer\n                duration = Math.max(1, Math.round(duration));\n                console.log(\"\\uD83D\\uDCB0 Catalogue pricing:\", {\n                    price: catalogueItem.price,\n                    currency: catalogueItem.currency,\n                    durationMins: catalogueItem.durationMins,\n                    durationHours: duration,\n                    title: catalogueItem.title\n                });\n            } catch (catalogueError) {\n                console.error(\"❌ Error fetching catalogue item:\", catalogueError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to fetch service package details\",\n                    details: catalogueError instanceof Error ? catalogueError.message : \"Unknown error\"\n                }, {\n                    status: 500\n                });\n            }\n        } else {\n            // Legacy pricing\n            console.log(\"\\uD83D\\uDCB0 Using legacy pricing...\");\n            // Get provider's custom rate for this service\n            const providerService = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_2__.db.providerService.findFirst({\n                where: {\n                    providerId: validated.providerId,\n                    serviceId: actualServiceId\n                },\n                include: {\n                    service: true\n                }\n            });\n            if (providerService?.customRate) {\n                totalAmount = providerService.customRate * duration;\n            } else if (provider.hourlyRate) {\n                totalAmount = provider.hourlyRate * duration;\n            } else if (providerService?.service?.basePrice) {\n                totalAmount = providerService.service.basePrice * duration;\n            } else {\n                // Fallback to default pricing\n                totalAmount = 150 * duration; // R150 per hour default\n            }\n            console.log(\"\\uD83D\\uDCB0 Legacy pricing:\", {\n                totalAmount,\n                duration,\n                customRate: providerService?.customRate,\n                hourlyRate: provider.hourlyRate,\n                basePrice: providerService?.service?.basePrice\n            });\n            // Ensure duration is a valid integer for legacy pricing\n            duration = Math.max(1, Math.round(duration));\n        }\n        // Validate that we have a valid amount\n        if (totalAmount <= 0 || isNaN(totalAmount)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unable to determine service pricing. Please contact support.\",\n                details: \"The provider or service does not have proper pricing configured.\"\n            }, {\n                status: 400\n            });\n        }\n        // Round totalAmount to 2 decimal places\n        totalAmount = Math.round(totalAmount * 100) / 100;\n        // Calculate platform fee (10% of total amount)\n        platformFee = Math.round(totalAmount * 0.1 * 100) / 100; // Round to 2 decimal places\n        // Create a booking with PENDING status (waiting for provider response)\n        console.log(\"\\uD83D\\uDCDD Creating booking with calculated pricing...\", {\n            totalAmount,\n            platformFee,\n            duration,\n            providerId: validated.providerId,\n            serviceId: actualServiceId,\n            catalogueItemId: validated.catalogueItemId,\n            pricingMode: useCatalogue ? \"catalogue\" : \"legacy\"\n        });\n        const booking = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_2__.db.booking.create({\n            data: {\n                clientId: user.id,\n                providerId: validated.providerId,\n                serviceId: actualServiceId,\n                catalogueItemId: validated.catalogueItemId || null,\n                scheduledDate: requestedDateTime,\n                duration,\n                totalAmount,\n                platformFee,\n                bookedPrice,\n                bookedCurrency,\n                bookedDurationMins,\n                description: validated.notes || null,\n                address: validated.address,\n                status: \"PENDING\",\n                paymentMethod: validated.paymentMethod\n            }\n        });\n        console.log(\"✅ Booking created:\", {\n            bookingId: booking.id,\n            totalAmount: booking.totalAmount,\n            platformFee: booking.platformFee,\n            duration: booking.duration,\n            status: booking.status,\n            catalogueItemId: booking.catalogueItemId,\n            paymentMethod: booking.paymentMethod\n        });\n        // Handle payment creation based on payment method\n        if (validated.paymentMethod === \"CASH\") {\n            console.log(\"\\uD83D\\uDCB0 Creating cash payment record...\");\n            // Create minimal payment record for cash payments\n            const cashPayment = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_2__.db.payment.create({\n                data: {\n                    bookingId: booking.id,\n                    amount: totalAmount,\n                    paystackRef: `CASH_${booking.id}`,\n                    status: \"CASH_PENDING\"\n                }\n            });\n            console.log(\"✅ Cash payment record created:\", {\n                paymentId: cashPayment.id,\n                bookingId: booking.id,\n                amount: cashPayment.amount,\n                status: cashPayment.status\n            });\n        } else {\n            console.log(\"\\uD83D\\uDCB3 Online payment - Payment record will be created when client initiates payment\");\n        }\n        // Note: Proposal creation removed - table doesn't exist in database\n        console.log(\"ℹ️ Skipping proposal creation (table not available)\");\n        // Create notifications for both client and provider\n        console.log(\"\\uD83D\\uDD14 Creating notifications...\");\n        try {\n            // Get the full booking data with relations for notifications\n            const fullBooking = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_2__.db.booking.findUnique({\n                where: {\n                    id: booking.id\n                },\n                select: {\n                    id: true,\n                    status: true,\n                    scheduledDate: true,\n                    totalAmount: true,\n                    client: {\n                        select: {\n                            id: true,\n                            name: true,\n                            email: true\n                        }\n                    },\n                    provider: {\n                        select: {\n                            businessName: true,\n                            user: {\n                                select: {\n                                    id: true,\n                                    name: true,\n                                    email: true\n                                }\n                            }\n                        }\n                    },\n                    service: {\n                        select: {\n                            name: true,\n                            category: {\n                                select: {\n                                    name: true\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            if (fullBooking) {\n                // Notify provider about new booking\n                const providerNotification = _lib_notification_service__WEBPACK_IMPORTED_MODULE_3__.NotificationTemplates.BOOKING_CREATED(fullBooking);\n                await (0,_lib_notification_service__WEBPACK_IMPORTED_MODULE_3__.createNotification)({\n                    userId: fullBooking.provider.user.id,\n                    type: providerNotification.type,\n                    title: providerNotification.title,\n                    content: providerNotification.content\n                });\n                // Notify client about booking creation\n                await (0,_lib_notification_service__WEBPACK_IMPORTED_MODULE_3__.createNotification)({\n                    userId: fullBooking.client.id,\n                    type: \"BOOKING_CREATED\",\n                    title: \"Booking Request Sent\",\n                    content: `Your booking request for ${fullBooking.service?.name || \"service\"} has been sent to ${fullBooking.provider?.businessName || \"the provider\"}. You'll be notified when they respond.`\n                });\n                console.log(`🔔 Notifications sent: Provider ${fullBooking.provider.user.email}, Client ${fullBooking.client.email}`);\n            }\n        } catch (notificationError) {\n            console.error(\"❌ Failed to create booking notifications:\", notificationError);\n        // Don't fail the request if notification fails\n        }\n        // Broadcast real-time update to provider\n        console.log(\"\\uD83D\\uDCE1 Broadcasting real-time update to provider...\");\n        try {\n            // Note: WebSocket broadcasting would go here\n            console.log(\"✅ Real-time update broadcasted\");\n        } catch (broadcastError) {\n            console.error(\"❌ Failed to broadcast real-time update:\", broadcastError);\n        // Don't fail the request if broadcasting fails\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            booking: {\n                id: booking.id,\n                status: booking.status,\n                scheduledDate: booking.scheduledDate,\n                totalAmount: booking.totalAmount,\n                providerId: booking.providerId,\n                catalogueItemId: booking.catalogueItemId,\n                paymentMethod: booking.paymentMethod,\n                pricingMode: useCatalogue ? \"catalogue\" : \"legacy\"\n            },\n            message: validated.paymentMethod === \"CASH\" ? \"Job offer sent successfully! Pay cash directly to your provider after service completion.\" : \"Job offer sent successfully! Provider will respond within 2 hours.\"\n        });\n    } catch (error) {\n        console.error(\"❌ Send-offer API error:\", error);\n        if (error instanceof Error) {\n            console.error(\"Error details:\", {\n                message: error.message,\n                stack: error.stack,\n                name: error.name\n            });\n        }\n        // Return specific error message based on error type\n        let errorMessage = \"Failed to send job offer. Please try again.\";\n        let statusCode = 500;\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_5__.ZodError) {\n            errorMessage = `Validation error: ${error.errors[0]?.message || \"Invalid input\"}`;\n            statusCode = 400;\n        } else if (error && typeof error === \"object\" && \"code\" in error) {\n            // Prisma errors\n            if (error.code === \"P1001\" || error.code === \"P1008\") {\n                errorMessage = \"Database connection error. Please try again.\";\n                statusCode = 500;\n            } else if (error.code === \"P2002\") {\n                errorMessage = \"Duplicate entry. Please try again.\";\n                statusCode = 400;\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: errorMessage,\n            details: error instanceof Error ? error.message : \"Unknown error\"\n        }, {\n            status: statusCode\n        });\n    }\n}\n// Helper function to find alternative times\nasync function findAlternativeTimes(providerId, date, serviceId) {\n    try {\n        // This would implement logic to find alternative available times\n        // For now, return some sample times\n        return [\n            \"09:00\",\n            \"11:00\",\n            \"13:00\",\n            \"15:00\",\n            \"17:00\"\n        ];\n    } catch (error) {\n        console.error(\"Error finding alternative times:\", error);\n        return [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/book-service/send-offer-enhanced/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAuthCookie: () => (/* binding */ clearAuthCookie),\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   getCurrentUserSafe: () => (/* binding */ getCurrentUserSafe),\n/* harmony export */   getUserDashboardPath: () => (/* binding */ getUserDashboardPath),\n/* harmony export */   getUserFromRequest: () => (/* binding */ getUserFromRequest),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   requireAdmin: () => (/* binding */ requireAdmin),\n/* harmony export */   setAuthCookie: () => (/* binding */ setAuthCookie),\n/* harmony export */   signToken: () => (/* binding */ signToken),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/sign.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/verify.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _db_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./db-utils */ \"(rsc)/./lib/db-utils.ts\");\n\n\n\n\nconst JWT_EXPIRES_IN = \"7d\";\nasync function hashPassword(password) {\n    const saltRounds = 10;\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().hash(password, saltRounds);\n}\nasync function verifyPassword(password, hashedPassword) {\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().compare(password, hashedPassword);\n}\nasync function signToken(payload) {\n    const secret = new TextEncoder().encode(process.env.NEXTAUTH_SECRET || \"secret\");\n    return await new jose__WEBPACK_IMPORTED_MODULE_3__.SignJWT(payload).setProtectedHeader({\n        alg: \"HS256\"\n    }).setIssuedAt().setExpirationTime(JWT_EXPIRES_IN).sign(secret);\n}\nasync function verifyToken(token) {\n    try {\n        const secret = new TextEncoder().encode(process.env.NEXTAUTH_SECRET || \"secret\");\n        const { payload } = await jose__WEBPACK_IMPORTED_MODULE_4__.jwtVerify(token, secret);\n        return payload;\n    } catch (error) {\n        return null;\n    }\n}\nasync function getCurrentUser() {\n    try {\n        // Skip during build time\n        if (process.env.NEXT_PHASE === \"phase-production-build\") {\n            console.log(\"Skipping getCurrentUser during build time\");\n            return null;\n        }\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n        const token = cookieStore.get(\"auth-token\")?.value;\n        if (!token) return null;\n        const decoded = await verifyToken(token);\n        if (!decoded) return null;\n        // Verify user still exists and is active\n        const user = await _db_utils__WEBPACK_IMPORTED_MODULE_2__.db.user.findFirst({\n            where: {\n                id: decoded.id,\n                isActive: true\n            },\n            select: {\n                id: true,\n                email: true,\n                name: true,\n                role: true,\n                emailVerified: true,\n                provider: {\n                    select: {\n                        id: true\n                    }\n                }\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error(\"Error in getCurrentUser:\", error);\n        return null;\n    }\n}\n// Compatibility exports for existing imports in API routes\nasync function getCurrentUserSafe() {\n    return await getCurrentUser();\n}\nasync function generateToken(payload) {\n    return await signToken(payload);\n}\nasync function requireAdmin() {\n    const user = await getCurrentUser();\n    if (!user || user.role !== \"ADMIN\") return null;\n    return user;\n}\nasync function getUserFromRequest(request) {\n    // Skip during build time\n    if (false) {}\n    // Check if we're in a browser/Edge runtime environment\n    if (false) {}\n    const cookieHeader = request.headers.get(\"cookie\");\n    if (!cookieHeader) return null;\n    const token = cookieHeader.split(\";\").find((c)=>c.trim().startsWith(\"auth-token=\"))?.split(\"=\")[1];\n    if (!token) return null;\n    const decoded = await verifyToken(token);\n    if (!decoded) return null;\n    // This function is used in middleware, which runs in the Edge runtime where\n    // Prisma is not available. We'll only verify the token here.\n    // The full user object will be fetched from the DB in server components/API routes.\n    return decoded;\n}\nasync function setAuthCookie(user) {\n    const token = await signToken(user);\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    // Simplified cookie configuration - no domain restrictions\n    const cookieOptions = {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"lax\",\n        path: \"/\",\n        maxAge: 60 * 60 * 24 * 7\n    };\n    console.log(\"\\uD83C\\uDF6A Setting auth cookie:\", {\n        userId: user.id,\n        userEmail: user.email,\n        cookieDomain: \"auto (no domain specified)\",\n        secure: cookieOptions.secure,\n        sameSite: cookieOptions.sameSite,\n        maxAge: cookieOptions.maxAge\n    });\n    cookieStore.set(\"auth-token\", token, cookieOptions);\n}\nasync function clearAuthCookie() {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    cookieStore.delete(\"auth-token\");\n}\nfunction getUserDashboardPath(role, isEmailVerified, providerStatus) {\n    if (!isEmailVerified) return \"/verify-email\";\n    switch(role){\n        case \"CLIENT\":\n            return \"/dashboard\";\n        case \"PROVIDER\":\n            if (providerStatus === \"INCOMPLETE\" || providerStatus === \"REJECTED\") return \"/provider/onboarding\";\n            if (providerStatus === \"PENDING\") return \"/provider/pending\";\n            if (providerStatus === \"APPROVED\") return \"/provider/dashboard\";\n            return \"/provider/onboarding\";\n        case \"ADMIN\":\n            return \"/admin\";\n        default:\n            return \"/dashboard\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db-utils.ts":
/*!*************************!*\
  !*** ./lib/db-utils.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   withRetry: () => (/* binding */ withRetry)\n/* harmony export */ });\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prisma */ \"(rsc)/./lib/prisma.ts\");\n\n// Retry configuration for database operations\nconst RETRY_CONFIG = {\n    maxAttempts: 3,\n    baseDelay: 1000,\n    maxDelay: 5000\n};\n// Exponential backoff delay\nconst getDelay = (attempt)=>{\n    const delay = RETRY_CONFIG.baseDelay * Math.pow(2, attempt - 1);\n    return Math.min(delay, RETRY_CONFIG.maxDelay);\n};\n// Check if error is retryable\nconst isRetryableError = (error)=>{\n    if (!error) return false;\n    const message = error.message || \"\";\n    const code = error.code || \"\";\n    // Retry on \"Engine is not yet connected\" errors (common with pooler)\n    if (message.includes(\"Engine is not yet connected\")) {\n        return true;\n    }\n    // Retry on prepared statement errors (Supabase connection issues)\n    if (message.includes(\"prepared statement\") || message.includes(\"does not exist\")) {\n        return true;\n    }\n    // Retry on connection errors\n    if (code === \"P1001\" || code === \"P1008\" || code === \"P1017\") {\n        return true;\n    }\n    // Retry on timeout errors\n    if (code === \"P2024\" || message.includes(\"timeout\") || message.includes(\"connection pool\")) {\n        return true;\n    }\n    return false;\n};\n// Generic retry wrapper for database operations\nasync function withRetry(operation, context = \"database operation\") {\n    // Check if Prisma client is available\n    if (!_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n        throw new Error(`Cannot execute ${context} - Prisma client not available in this environment`);\n    }\n    let lastError;\n    for(let attempt = 1; attempt <= RETRY_CONFIG.maxAttempts; attempt++){\n        try {\n            return await operation();\n        } catch (error) {\n            lastError = error;\n            if (attempt === RETRY_CONFIG.maxAttempts || !isRetryableError(error)) {\n                console.error(`❌ ${context} failed after ${attempt} attempts:`, error);\n                throw error;\n            }\n            console.warn(`⚠️ ${context} failed (attempt ${attempt}/${RETRY_CONFIG.maxAttempts}), retrying...`, error);\n            // Wait before retrying\n            await new Promise((resolve)=>setTimeout(resolve, getDelay(attempt)));\n            // For connection errors, try to refresh the connection\n            if (error.message && (error.message.includes(\"prepared statement\") || error.message.includes(\"Engine is not yet connected\") || error.message.includes(\"connection pool\"))) {\n                console.log(\"\\uD83D\\uDD04 Attempting to refresh Prisma connection...\");\n                try {\n                    await _prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$disconnect();\n                    await _prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$connect();\n                    console.log(\"✅ Prisma connection refreshed\");\n                } catch (refreshError) {\n                    console.warn(\"⚠️ Failed to refresh Prisma connection:\", refreshError);\n                }\n            }\n        }\n    }\n    throw lastError;\n}\n// Create database operations wrapper\nconst createDbWrapper = ()=>{\n    if (!_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n        console.warn(\"⚠️ Prisma client not available - running in browser/Edge runtime\");\n        // Return dummy db object for build-time compatibility\n        return {\n            user: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                update: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null),\n                create: ()=>Promise.resolve(null)\n            },\n            provider: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                update: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null),\n                upsert: ()=>Promise.resolve(null)\n            },\n            booking: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                update: ()=>Promise.resolve(null),\n                aggregate: ()=>Promise.resolve({\n                        _sum: {\n                            totalAmount: 0\n                        },\n                        _avg: {\n                            totalAmount: 0\n                        }\n                    })\n            },\n            payment: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                update: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null),\n                aggregate: ()=>Promise.resolve({\n                        _sum: {\n                            amount: 0\n                        },\n                        _avg: {\n                            rating: 0\n                        }\n                    })\n            },\n            notification: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                update: ()=>Promise.resolve(null),\n                updateMany: ()=>Promise.resolve({\n                        count: 0\n                    }),\n                delete: ()=>Promise.resolve(null),\n                deleteMany: ()=>Promise.resolve({\n                        count: 0\n                    })\n            },\n            catalogueItem: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                update: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null),\n                upsert: ()=>Promise.resolve(null)\n            },\n            review: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                aggregate: ()=>Promise.resolve({\n                        _sum: {\n                            amount: 0\n                        },\n                        _avg: {\n                            rating: 0\n                        }\n                    })\n            },\n            payout: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                update: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null)\n            },\n            service: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0)\n            },\n            serviceCategory: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                update: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null)\n            },\n            providerService: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                createMany: ()=>Promise.resolve({\n                        count: 0\n                    }),\n                update: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null),\n                deleteMany: ()=>Promise.resolve({\n                        count: 0\n                    })\n            },\n            verificationToken: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null),\n                deleteMany: ()=>Promise.resolve({\n                        count: 0\n                    })\n            },\n            passwordResetToken: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null),\n                deleteMany: ()=>Promise.resolve({\n                        count: 0\n                    })\n            },\n            bookingDraft: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                update: ()=>Promise.resolve(null),\n                delete: ()=>Promise.resolve(null),\n                deleteMany: ()=>Promise.resolve({\n                        count: 0\n                    })\n            },\n            notification: {\n                findFirst: ()=>Promise.resolve(null),\n                findMany: ()=>Promise.resolve([]),\n                findUnique: ()=>Promise.resolve(null),\n                count: ()=>Promise.resolve(0),\n                create: ()=>Promise.resolve(null),\n                update: ()=>Promise.resolve(null),\n                updateMany: ()=>Promise.resolve({\n                        count: 0\n                    }),\n                delete: ()=>Promise.resolve(null),\n                deleteMany: ()=>Promise.resolve({\n                        count: 0\n                    })\n            },\n            $transaction: (callback)=>Promise.resolve(callback({})),\n            $queryRaw: ()=>Promise.resolve([]),\n            $executeRaw: ()=>Promise.resolve(0),\n            $disconnect: ()=>Promise.resolve()\n        };\n    }\n    // Return real db wrapper with retry logic\n    return {\n        // User operations\n        user: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.findFirst(args), \"user.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.findMany(args), \"user.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.findUnique(args), \"user.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.count(args), \"user.count\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.update(args), \"user.update\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.delete(args), \"user.delete\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.create(args), \"user.create\")\n        },\n        // Provider operations\n        provider: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].provider.findFirst(args), \"provider.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].provider.findMany(args), \"provider.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].provider.findUnique(args), \"provider.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].provider.count(args), \"provider.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].provider.create(args), \"provider.create\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].provider.update(args), \"provider.update\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].provider.delete(args), \"provider.delete\"),\n            upsert: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].provider.upsert(args), \"provider.upsert\")\n        },\n        // Booking operations\n        booking: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].booking.findFirst(args), \"booking.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].booking.findMany(args), \"booking.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].booking.findUnique(args), \"booking.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].booking.count(args), \"booking.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].booking.create(args), \"booking.create\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].booking.update(args), \"booking.update\"),\n            aggregate: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].booking.aggregate(args), \"booking.aggregate\")\n        },\n        // Payment operations\n        payment: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payment.findFirst(args), \"payment.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payment.findMany(args), \"payment.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payment.findUnique(args), \"payment.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payment.count(args), \"payment.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payment.create(args), \"payment.create\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payment.update(args), \"payment.update\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payment.delete(args), \"payment.delete\"),\n            aggregate: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payment.aggregate(args), \"payment.aggregate\")\n        },\n        // Review operations\n        review: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].review.findFirst(args), \"review.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].review.findMany(args), \"review.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].review.findUnique(args), \"review.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].review.count(args), \"review.count\"),\n            aggregate: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].review.aggregate(args), \"review.aggregate\")\n        },\n        // Notification operations\n        notification: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].notification.findFirst(args), \"notification.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].notification.findMany(args), \"notification.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].notification.findUnique(args), \"notification.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].notification.count(args), \"notification.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].notification.create(args), \"notification.create\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].notification.update(args), \"notification.update\"),\n            updateMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].notification.updateMany(args), \"notification.updateMany\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].notification.delete(args), \"notification.delete\"),\n            deleteMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].notification.deleteMany(args), \"notification.deleteMany\")\n        },\n        // Payout operations\n        payout: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payout.findFirst(args), \"payout.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payout.findMany(args), \"payout.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payout.findUnique(args), \"payout.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payout.count(args), \"payout.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payout.create(args), \"payout.create\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payout.update(args), \"payout.update\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].payout.delete(args), \"payout.delete\")\n        },\n        // Service operations\n        service: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].service.findFirst(args), \"service.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].service.findMany(args), \"service.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].service.findUnique(args), \"service.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].service.count(args), \"service.count\")\n        },\n        // ServiceCategory operations\n        serviceCategory: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serviceCategory.findFirst(args), \"serviceCategory.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serviceCategory.findMany(args), \"serviceCategory.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serviceCategory.findUnique(args), \"serviceCategory.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serviceCategory.count(args), \"serviceCategory.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serviceCategory.create(args), \"serviceCategory.create\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serviceCategory.update(args), \"serviceCategory.update\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serviceCategory.delete(args), \"serviceCategory.delete\")\n        },\n        // ProviderService operations\n        providerService: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].providerService.findFirst(args), \"providerService.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].providerService.findMany(args), \"providerService.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].providerService.findUnique(args), \"providerService.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].providerService.count(args), \"providerService.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].providerService.create(args), \"providerService.create\"),\n            createMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].providerService.createMany(args), \"providerService.createMany\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].providerService.update(args), \"providerService.update\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].providerService.delete(args), \"providerService.delete\"),\n            deleteMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].providerService.deleteMany(args), \"providerService.deleteMany\")\n        },\n        // VerificationToken operations\n        verificationToken: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].verificationToken.findFirst(args), \"verificationToken.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].verificationToken.findMany(args), \"verificationToken.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].verificationToken.findUnique(args), \"verificationToken.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].verificationToken.count(args), \"verificationToken.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].verificationToken.create(args), \"verificationToken.create\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].verificationToken.delete(args), \"verificationToken.delete\"),\n            deleteMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].verificationToken.deleteMany(args), \"verificationToken.deleteMany\")\n        },\n        // PasswordResetToken operations\n        passwordResetToken: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].passwordResetToken.findFirst(args), \"passwordResetToken.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].passwordResetToken.findMany(args), \"passwordResetToken.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].passwordResetToken.findUnique(args), \"passwordResetToken.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].passwordResetToken.count(args), \"passwordResetToken.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].passwordResetToken.create(args), \"passwordResetToken.create\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].passwordResetToken.delete(args), \"passwordResetToken.delete\"),\n            deleteMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].passwordResetToken.deleteMany(args), \"passwordResetToken.deleteMany\")\n        },\n        // BookingDraft operations\n        bookingDraft: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bookingDraft.findFirst(args), \"bookingDraft.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bookingDraft.findMany(args), \"bookingDraft.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bookingDraft.findUnique(args), \"bookingDraft.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bookingDraft.count(args), \"bookingDraft.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bookingDraft.create(args), \"bookingDraft.create\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bookingDraft.update(args), \"bookingDraft.update\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bookingDraft.delete(args), \"bookingDraft.delete\"),\n            deleteMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bookingDraft.deleteMany(args), \"bookingDraft.deleteMany\")\n        },\n        // CatalogueItem operations\n        catalogueItem: {\n            findFirst: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].catalogueItem.findFirst(args), \"catalogueItem.findFirst\"),\n            findMany: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].catalogueItem.findMany(args), \"catalogueItem.findMany\"),\n            findUnique: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].catalogueItem.findUnique(args), \"catalogueItem.findUnique\"),\n            count: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].catalogueItem.count(args), \"catalogueItem.count\"),\n            create: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].catalogueItem.create(args), \"catalogueItem.create\"),\n            update: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].catalogueItem.update(args), \"catalogueItem.update\"),\n            delete: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].catalogueItem.delete(args), \"catalogueItem.delete\"),\n            upsert: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].catalogueItem.upsert(args), \"catalogueItem.upsert\")\n        },\n        // Transaction operations\n        $transaction: async (callback)=>{\n            // For transactions, we need to handle retries differently\n            // because the callback needs to receive the transaction object\n            let lastError;\n            for(let attempt = 1; attempt <= RETRY_CONFIG.maxAttempts; attempt++){\n                try {\n                    return await _prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$transaction(callback);\n                } catch (error) {\n                    lastError = error;\n                    if (attempt === RETRY_CONFIG.maxAttempts || !isRetryableError(error)) {\n                        console.error(`❌ db.$transaction failed after ${attempt} attempts:`, error);\n                        throw error;\n                    }\n                    console.warn(`⚠️ db.$transaction failed (attempt ${attempt}/${RETRY_CONFIG.maxAttempts}), retrying...`, error);\n                    // Wait before retrying\n                    await new Promise((resolve)=>setTimeout(resolve, getDelay(attempt)));\n                    // For connection errors, try to refresh the connection\n                    if (error.message && (error.message.includes(\"prepared statement\") || error.message.includes(\"Engine is not yet connected\") || error.message.includes(\"connection pool\"))) {\n                        console.log(\"\\uD83D\\uDD04 Attempting to refresh Prisma connection...\");\n                        try {\n                            await _prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$disconnect();\n                            await _prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$connect();\n                            console.log(\"✅ Prisma connection refreshed\");\n                        } catch (refreshError) {\n                            console.warn(\"⚠️ Failed to refresh Prisma connection:\", refreshError);\n                        }\n                    }\n                }\n            }\n            throw lastError;\n        },\n        // Raw query operations\n        $queryRaw: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$queryRaw(args), \"db.$queryRaw\"),\n        $executeRaw: (args)=>withRetry(()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$executeRaw(args), \"db.$executeRaw\"),\n        $disconnect: ()=>_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$disconnect()\n    };\n};\n// Create and export the database wrapper\nconst db = createDbWrapper();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db-utils.ts\n");

/***/ }),

/***/ "(rsc)/./lib/notification-service.ts":
/*!*************************************!*\
  !*** ./lib/notification-service.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotificationTemplates: () => (/* binding */ NotificationTemplates),\n/* harmony export */   cleanupOldNotifications: () => (/* binding */ cleanupOldNotifications),\n/* harmony export */   createBulkNotifications: () => (/* binding */ createBulkNotifications),\n/* harmony export */   createNotification: () => (/* binding */ createNotification),\n/* harmony export */   getUnreadNotificationCount: () => (/* binding */ getUnreadNotificationCount),\n/* harmony export */   getUserNotifications: () => (/* binding */ getUserNotifications),\n/* harmony export */   markAllNotificationsAsRead: () => (/* binding */ markAllNotificationsAsRead),\n/* harmony export */   markNotificationAsRead: () => (/* binding */ markNotificationAsRead)\n/* harmony export */ });\n/* harmony import */ var _lib_db_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db-utils */ \"(rsc)/./lib/db-utils.ts\");\n\n/**\r\n * Create a notification for a user\r\n */ async function createNotification(data) {\n    try {\n        const notification = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_0__.db.notification.create({\n            data: {\n                userId: data.userId,\n                type: data.type,\n                title: data.title,\n                message: data.content,\n                isRead: false\n            },\n            include: {\n                user: {\n                    select: {\n                        id: true,\n                        name: true,\n                        email: true\n                    }\n                }\n            }\n        });\n        console.log(`🔔 Notification created: ${data.type} for user ${data.userId}`);\n        return notification;\n    } catch (error) {\n        console.error(\"❌ Failed to create notification:\", error);\n        throw error;\n    }\n}\n/**\r\n * Create multiple notifications at once\r\n */ async function createBulkNotifications(notifications) {\n    try {\n        const createdNotifications = await Promise.all(notifications.map((notification)=>createNotification(notification)));\n        console.log(`🔔 Created ${createdNotifications.length} notifications`);\n        return createdNotifications;\n    } catch (error) {\n        console.error(\"❌ Failed to create bulk notifications:\", error);\n        throw error;\n    }\n}\n/**\r\n * Get notifications for a user\r\n */ async function getUserNotifications(userId, limit = 50) {\n    try {\n        const notifications = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_0__.db.notification.findMany({\n            where: {\n                userId\n            },\n            orderBy: {\n                createdAt: \"desc\"\n            },\n            take: limit,\n            include: {\n                user: {\n                    select: {\n                        id: true,\n                        name: true,\n                        email: true\n                    }\n                }\n            }\n        });\n        return notifications;\n    } catch (error) {\n        console.error(\"❌ Failed to get user notifications:\", error);\n        throw error;\n    }\n}\n/**\r\n * Mark notification as read\r\n */ async function markNotificationAsRead(notificationId, userId) {\n    try {\n        const notification = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_0__.db.notification.updateMany({\n            where: {\n                id: notificationId,\n                userId: userId\n            },\n            data: {\n                isRead: true\n            }\n        });\n        return notification;\n    } catch (error) {\n        console.error(\"❌ Failed to mark notification as read:\", error);\n        throw error;\n    }\n}\n/**\r\n * Mark all notifications as read for a user\r\n */ async function markAllNotificationsAsRead(userId) {\n    try {\n        const result = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_0__.db.notification.updateMany({\n            where: {\n                userId: userId,\n                isRead: false\n            },\n            data: {\n                isRead: true\n            }\n        });\n        console.log(`🔔 Marked ${result.count} notifications as read for user ${userId}`);\n        return result;\n    } catch (error) {\n        console.error(\"❌ Failed to mark all notifications as read:\", error);\n        throw error;\n    }\n}\n/**\r\n * Get unread notification count for a user\r\n */ async function getUnreadNotificationCount(userId) {\n    try {\n        const count = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_0__.db.notification.count({\n            where: {\n                userId: userId,\n                isRead: false\n            }\n        });\n        return count;\n    } catch (error) {\n        console.error(\"❌ Failed to get unread notification count:\", error);\n        return 0;\n    }\n}\n/**\r\n * Delete old notifications (cleanup)\r\n */ async function cleanupOldNotifications(daysOld = 30) {\n    try {\n        const cutoffDate = new Date();\n        cutoffDate.setDate(cutoffDate.getDate() - daysOld);\n        const result = await _lib_db_utils__WEBPACK_IMPORTED_MODULE_0__.db.notification.deleteMany({\n            where: {\n                createdAt: {\n                    lt: cutoffDate\n                },\n                isRead: true\n            }\n        });\n        console.log(`🧹 Cleaned up ${result.count} old notifications`);\n        return result;\n    } catch (error) {\n        console.error(\"❌ Failed to cleanup old notifications:\", error);\n        throw error;\n    }\n}\n/**\r\n * Notification templates for different actions\r\n */ const NotificationTemplates = {\n    BOOKING_CREATED: (booking)=>({\n            type: \"BOOKING_CREATED\",\n            title: \"New Booking Request\",\n            content: `You have a new booking request for ${booking.service?.name || \"service\"} from ${booking.client?.name || \"a client\"}. Please review and respond.`\n        }),\n    BOOKING_ACCEPTED: (booking)=>({\n            type: \"BOOKING_ACCEPTED\",\n            title: \"Booking Accepted!\",\n            content: `Great news! Your booking for ${booking.service?.name || \"service\"} has been accepted by ${booking.provider?.businessName || \"the provider\"}. You can now proceed with payment.`\n        }),\n    BOOKING_DECLINED: (booking)=>({\n            type: \"BOOKING_DECLINED\",\n            title: \"Booking Declined\",\n            content: `Unfortunately, your booking for ${booking.service?.name || \"service\"} was declined. Don't worry, you can try booking with another provider.`\n        }),\n    BOOKING_CANCELLED: (booking, cancelledBy)=>({\n            type: \"BOOKING_CANCELLED\",\n            title: \"Booking Cancelled\",\n            content: `Your booking for ${booking.service?.name || \"service\"} has been cancelled by ${cancelledBy === \"client\" ? \"the client\" : \"the provider\"}.`\n        }),\n    PAYMENT_RECEIVED: (booking)=>({\n            type: \"PAYMENT_RECEIVED\",\n            title: \"Payment Received\",\n            content: `Payment received for ${booking.service?.name || \"your service\"} - Booking #${booking.id}. You can now start the job!`\n        }),\n    PAYMENT_FAILED: (booking)=>({\n            type: \"PAYMENT_FAILED\",\n            title: \"Payment Failed\",\n            content: `Payment failed for ${booking.service?.name || \"service\"} - Booking #${booking.id}. Please try again or contact support.`\n        }),\n    JOB_STARTED: (booking)=>({\n            type: \"JOB_STARTED\",\n            title: \"Job Started\",\n            content: `Great news! ${booking.provider?.businessName || \"The provider\"} has started working on your ${booking.service?.name || \"service\"}.`\n        }),\n    JOB_COMPLETED: (booking)=>({\n            type: \"JOB_COMPLETED\",\n            title: \"Job Completed\",\n            content: `Your ${booking.service?.name || \"service\"} has been completed! Please review the work and confirm completion to release payment.`\n        }),\n    DISPUTE_CREATED: (booking, disputeType)=>({\n            type: \"DISPUTE_CREATED\",\n            title: \"Dispute Created\",\n            content: `A dispute has been created for booking #${booking.id} regarding ${disputeType}. Our team will review and resolve this issue.`\n        }),\n    DISPUTE_RESOLVED: (booking, resolution)=>({\n            type: \"DISPUTE_RESOLVED\",\n            title: \"Dispute Resolved\",\n            content: `The dispute for booking #${booking.id} has been resolved: ${resolution}`\n        }),\n    REVIEW_SUBMITTED: (booking, rating)=>({\n            type: \"REVIEW_SUBMITTED\",\n            title: \"Review Submitted\",\n            content: `A ${rating}-star review has been submitted for your service on booking #${booking.id}.`\n        }),\n    PAYMENT_RELEASED: (booking, amount)=>({\n            type: \"PAYMENT_RELEASED\",\n            title: \"Payment Released\",\n            content: `Payment of R${amount.toFixed(2)} has been released for booking #${booking.id}. The funds should appear in your account within 1-3 business days.`\n        }),\n    ESCROW_RELEASED: (booking, amount)=>({\n            type: \"ESCROW_RELEASED\",\n            title: \"Escrow Released\",\n            content: `Escrow payment of R${amount.toFixed(2)} has been released for booking #${booking.id}.`\n        }),\n    CATALOGUE_SETUP_REQUIRED: (provider, packageCount)=>({\n            type: \"CATALOGUE_SETUP_REQUIRED\",\n            title: \"\\uD83C\\uDF89 Your Service Packages Are Ready!\",\n            content: `We've created ${packageCount} starter packages for your services. Customize them now to start receiving bookings!`\n        }),\n    CATALOGUE_SETUP_COMPLETED: (provider, completionTime)=>({\n            type: \"CATALOGUE_SETUP_COMPLETED\",\n            title: \"\\uD83C\\uDF89 Setup Complete - You're Ready to Earn!\",\n            content: `Congratulations! You completed your service packages setup in ${completionTime}. You're now live and ready to receive bookings!`\n        }),\n    CATALOGUE_SETUP_REMINDER: (provider, daysSince)=>({\n            type: \"CATALOGUE_SETUP_REMINDER\",\n            title: \"\\uD83D\\uDCA1 Complete Your Service Packages\",\n            content: `Don't miss out on bookings! Complete your service packages setup to start earning. It's been ${daysSince} days since your packages were created.`\n        })\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/notification-service.ts\n");

/***/ }),

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MAX_RETRIES = 3;\nconst INITIAL_RETRY_DELAY = 200;\nconst MAX_RETRY_DELAY = 2000;\nfunction sleep(ms) {\n    return new Promise((resolve)=>setTimeout(resolve, ms));\n}\n// Enhanced database URL configuration\nfunction getDatabaseUrl() {\n    // Use environment variable for database URL\n    const databaseUrl = process.env.DATABASE_URL;\n    if (!databaseUrl) {\n        throw new Error(\"DATABASE_URL environment variable is required\");\n    }\n    console.log(\"\\uD83D\\uDD17 Database URL configured from environment variables\");\n    return databaseUrl;\n}\nclass PrismaWithRetry extends _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient {\n    constructor(){\n        super({\n            log:  true ? [\n                \"query\",\n                \"error\",\n                \"warn\"\n            ] : 0,\n            errorFormat: \"pretty\",\n            datasources: {\n                db: {\n                    url: getDatabaseUrl()\n                }\n            }\n        });\n        this.isConnected = false;\n    }\n    async handleConnectionError(error) {\n        if (error.message.includes(\"Connection pool timeout\")) {\n            console.error(\"Connection pool timeout detected. Attempting to reconnect...\");\n            await this.reconnect();\n            return true;\n        }\n        return false;\n    }\n    async reconnect() {\n        try {\n            await this.$disconnect();\n            this.isConnected = false;\n            await this.connect();\n        } catch (error) {\n            console.error(\"Failed to reconnect:\", error);\n            throw error;\n        }\n    }\n    async connect() {\n        if (this.isConnected) {\n            return;\n        }\n        let lastError;\n        let delay = INITIAL_RETRY_DELAY;\n        for(let attempt = 1; attempt <= MAX_RETRIES; attempt++){\n            try {\n                await super.$connect();\n                this.isConnected = true;\n                console.log(\"✅ Database connection established successfully\");\n                // Test the connection\n                await this.$queryRaw`SELECT 1`;\n                return;\n            } catch (error) {\n                lastError = error;\n                console.error(`❌ Connection attempt ${attempt} failed:`, error);\n                if (attempt < MAX_RETRIES) {\n                    console.log(`Retrying in ${delay}ms...`);\n                    await sleep(delay);\n                    delay = Math.min(delay * 2, MAX_RETRY_DELAY);\n                }\n            }\n        }\n        throw new Error(`Failed to connect after ${MAX_RETRIES} attempts. Last error: ${lastError}`);\n    }\n    async disconnect() {\n        if (!this.isConnected) {\n            return;\n        }\n        try {\n            await super.$disconnect();\n            this.isConnected = false;\n            console.log(\"Database connection closed successfully\");\n        } catch (error) {\n            console.error(\"Error disconnecting from database:\", error);\n            throw error;\n        }\n    }\n    async query(operation) {\n        try {\n            return await operation();\n        } catch (error) {\n            if (await this.handleConnectionError(error)) {\n                return await operation();\n            }\n            throw error;\n        }\n    }\n    // Override key methods to use our query wrapper\n    async $queryRaw(query) {\n        return this.query(()=>super.$queryRaw(query));\n    }\n    async $executeRaw(query) {\n        return this.query(()=>super.$executeRaw(query));\n    }\n}\nconst prisma = global.prisma || new PrismaWithRetry();\nif (true) {\n    global.prisma = prisma;\n}\n// Export the instance as default and named export\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/zod","vendor-chunks/jose","vendor-chunks/bcryptjs"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute&page=%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbook-service%2Fsend-offer-enhanced%2Froute.ts&appDir=C%3A%5CUsers%5Cliqui%5COneDrive%5CDesktop%5CConnectSA%5CConnectSA-k9%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cliqui%5COneDrive%5CDesktop%5CConnectSA%5CConnectSA-k9&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();